---
- include: setup.yml

- name: Get the current node's internal API IP address
  shell: grep "{{ ansible_hostname }}.internalapi" /etc/hosts | awk '{print $1}'
  register: current_ip_register

- name: Set the current IP fact
  set_fact:
    current_ip: "{{current_ip_register.stdout}}"

- name: Get the rest of the nodes' internal API IP addresses
  shell: grep "internalapi" /etc/hosts | grep -v "{{ current_ip }}" | grep -v "{{ overcloud_internal_api_fqdn }}" | awk '{print $1}'
  register: other_ips_register

# This outputs the hosts as lines consisting of <fqdn>,<IP>
- name: Get the controller hostnames and IP addresses
  shell: grep "controller.*internalapi" /etc/hosts | awk '{print $3","$1}'
  register: controllers_register

- name: Get the overcloud internal API VIP IP address
  shell: hiera internal_api_virtual_ip
  register: internal_api_vip_register

- name: Set the rest of the node IPs/VIP facts
  set_fact:
    other_ips: "{{other_ips_register.stdout_lines}}"
    controllers: "{{controllers_register.stdout_lines}}"
    internal_api_vip: "{{internal_api_vip_register.stdout}}"

- name: Determine if pacemaker is running
  shell: systemctl is-active pacemaker
  register: pacemaker_running
  ignore_errors: yes

# This returns the hostname (short) of the node hosting the VIP
- name: Determine which node is hosting the VIP
  shell: pcs status | grep ip- | sed 's/ip-//' | awk '{print $1"\t"$4}' | grep "{{ internal_api_vip }}" | awk '{print $2}'
  register: node_hosting_the_vip
  when: pacemaker_running.stdout == 'active'

- name: Add uniqueids = no to ipsec setup configuration
  lineinfile:
    dest: /etc/ipsec.conf
    regexp: '^\s+uniqueids'
    insertafter: '^config setup'
    line: "\tuniqueids=no"
  notify:
  - Restart ipsec

- name: Write ipsec.secrets file
  template:
    src: ipsec.secrets.j2
    dest: /etc/ipsec.d/overcloud-tunnels.secrets
    mode: '0600'
  notify:
  - Restart ipsec

- name: Write ipsec.conf file
  template:
    src: ipsec.conf.j2
    dest: /etc/ipsec.d/overcloud-tunnels.conf
    mode: '0640'
  notify:
  - Restart ipsec

- include: firewall.yml

- meta: flush_handlers

# Permissions gotten from http://www.linux-ha.org/doc/dev-guides/_installing_and_packaging_resource_agents.html
- name: Install TripleO IPSEC resource agent
  copy:
    src: ipsec-resource-agent.sh
    dest: /usr/lib/ocf/resource.d/heartbeat/tripleo-ipsec
    mode: '0755'
  register: resource_agent

- name: Was the Resource Agent added already?
  shell: pcs resource show tripleo-ipsec-internalapi
  ignore_errors: yes
  register: found_resource_agent
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname

- name: Delete Resource Agent
  shell: pcs resource delete tripleo-ipsec-internalapi
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname
  - resource_agent.changed
  - found_resource_agent|succeeded

- name: Add tripleo-ipsec pacemaker resource agent
  shell: pcs resource create tripleo-ipsec-internalapi ocf:heartbeat:tripleo-ipsec tunnel=overcloud-internalapi-vip-tunnel vip={{ internal_api_vip }} --disabled
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname
  - resource_agent.changed or found_resource_agent|failed

- name: Add collocation rule with VIP
  shell: pcs constraint colocation add tripleo-ipsec-internalapi with ip-{{ internal_api_vip }}
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname
  - resource_agent.changed or found_resource_agent|failed

- name: Add ordering rule with VIP
  shell: pcs constraint order start ip-{{ internal_api_vip }} then tripleo-ipsec-internalapi
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname
  - resource_agent.changed or found_resource_agent|failed

- name: Enable resource agent
  shell: pcs resource enable tripleo-ipsec-internalapi
  when:
  - pacemaker_running.stdout == 'active'
  - node_hosting_the_vip.stdout == ansible_hostname
  - resource_agent.changed or found_resource_agent|failed
