---
- name: Set network name fact
  set_fact:
    network: "{{ item }}"
    ip_var_key: "{{ item + '_ip' }}"

- name: Set current IP fact
  set_fact:
    current_ip: "{{ hostvars[inventory_hostname][ip_var_key] }}"

- when: current_ip != ctlplane_ip or network == 'ctlplane'
  block:
  - name: Set IP with prefix register
    shell: "ip addr show | grep {{ current_ip }} | awk '{print $2}'"
    register:
      ip_with_prefix_register

  - name: Set net CIDR fact
    set_fact:
      current_subnet: "{{ ip_with_prefix_register.stdout | ipaddr('subnet') }}"

  # Gets the IPs for the other nodes in the network. It skips the current IP and
  # also skips the nodes that are not in the subnet (which fall back to the
  # ctlplane network by default).
  - name: Set other IPs fact
    set_fact:
      other_ips: "{{ hostvars|json_query(other_ips_query)|difference([current_ip])|ipaddr(current_subnet) }}"
    vars:
      other_ips_query: '*.{{ ip_var_key }}'

  - name: Write ipsec tunnel configuration for the {{ network }} network
    template:
      src: ipsec-opportunistic-{{ policy }}.conf.j2
      dest: /etc/ipsec.d/overcloud-{{ network }}-opportunistic-{{ policy }}-tunnels.conf
      mode: '0640'
    when: other_ips != []
    notify:
    - Restart ipsec

  - name: Write ipsec tunnel policy for the {{ network }} network
    template:
      src: policy.j2
      dest: /etc/ipsec.d/policies/overcloud-{{ policy }}-{{ network }}-ip
      mode: '0640'
    when: other_ips != []
    notify:
    - Restart ipsec
